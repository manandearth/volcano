{"version":3,"sources":["react-native-icon.svg","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","App","react_default","a","createElement","className","src","logo","alt","src_VolcanoFilteredList","React","Component","VolcanoFilteredList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","lat","latEpsilon","lon","lonEpsilon","handleLatChange","bind","assertThisInitialized","handleLatEpsilonChange","handleLonChange","handleLonEpsilonChange","value","setState","src_LocationRange","onLatChange","onLatEpsilonChange","onLonChange","onLonEpsilonChange","src_VolcanoList","VolcanoList","_this2","volcanoes","Volcano","features","map","volcano","parseFloat","LocationRange","_this3","event","target","type","name","id","min","max","onChange","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6ecd462f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react-native-icon.6117817c.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Volcano from './volcano.json';\nimport logo from './react-native-icon.svg';\n\nclass App extends React.Component  {\n    render() {\n        return (\n            <div>\n              <div className=\"topbar\">\n                <div className=\"title\">\n                  <h1><span className=\"title\">[</span>REACTIVE VOLCANOES<span className=\"title\">]</span></h1>\n                  <h2 className=\"title\">The following is a <img src={logo} className=\"app-logo\" alt=\"logo\" /> <span className=\"R\">R</span>eact exercise</h2>\n                  <div className=\"explain\">\n                    <p>&lt;= Update the table by sliding the range inputs for latitude and longitude.</p>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"list\">\n              <VolcanoFilteredList />\n            </div>\n\n            </div>\n        );\n    }\n}\n\nclass VolcanoFilteredList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lat: \"40\", latEpsilon: \"2\",\n            lon: \"15\", lonEpsilon: \"2\"};\n        this.handleLatChange = this.handleLatChange.bind(this);\n        this.handleLatEpsilonChange = this.handleLatEpsilonChange.bind(this);\n        this.handleLonChange = this.handleLonChange.bind(this);\n        this.handleLonEpsilonChange = this.handleLonEpsilonChange.bind(this);\n        \n    }\n\n    handleLatChange(value) {\n        this.setState({lat: value});\n    }\n\n    handleLatEpsilonChange(value) {\n        this.setState({latEpsilon: value});\n    }\n    handleLonChange(value) {\n        this.setState({lon: value});\n    }\n    handleLonEpsilonChange(value) {\n        this.setState({lonEpsilon: value});\n    }\n    \n    render() {\n        return (\n            <section>\n            <div className=\"container\">\n              <div className=\"location-range\">\n              <LocationRange\n                lat={this.state.lat}\n                latEpsilon={this.state.latEpsilon}\n                lon={this.state.lon}\n                lonEpsilon={this.state.lonEpsilon}\n                onLatChange={this.handleLatChange}\n                onLatEpsilonChange={this.handleLatEpsilonChange}\n                onLonChange={this.handleLonChange}\n                onLonEpsilonChange={this.handleLonEpsilonChange} />\n              </div>\n              <div>\n            <table>\n              <thead>\n                <tr>\n                  <th><div>name</div></th>\n                  <th><div>Sub-region</div></th>\n                  <th><div>Latitude</div></th>\n                  <th><div>Longitude</div></th>\n                  <th><div>Active?</div></th>\n                  <th><div>Hazard Rate</div></th>\n                </tr>\n              </thead>\n              <tbody>\n                <VolcanoList\n                lat={this.state.lat}\n                latEpsilon={this.state.latEpsilon}\n                lon={this.state.lon}\n                lonEpsilon={this.state.lonEpsilon} />\n              </tbody>\n            </table>\n            </div>\n            </div>\n        </section>);\n    }\n    \n}\n\nclass  VolcanoList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.volcanoes = Volcano.features;    \n    }\n\n    render () {\n        const lat = this.props.lat;\n        const latEpsilon = this.props.latEpsilon;\n        const lon = this.props.lon;\n        const lonEpsilon = this.props.lonEpsilon;\n        return (\n            this.volcanoes.map((volcano) =>\n                (   volcano['properties']['Latitude'] <= (parseFloat(lat)  + parseFloat(latEpsilon)) &&\n                    volcano['properties']['Latitude'] >= (parseFloat(lat) - parseFloat(latEpsilon)) &&\n                    volcano['properties']['Longitude'] <= (parseFloat(lon) + parseFloat(lonEpsilon)) &&\n                    volcano['properties']['Longitude'] >= (parseFloat(lon) - parseFloat(lonEpsilon))) ? \n            <tr>\n              <td>{volcano['properties']['V_Name']}</td>\n              <td>{volcano['properties']['Subregion']}</td>\n              <td>{volcano['properties']['Latitude']}</td>\n              <td>{volcano['properties']['Longitude']}</td>\n              <td>{volcano['properties']['H_active']}</td>\n              <td>{volcano['properties']['hazard']}</td>\n            </tr> \n:\n                    null\n                ));\n       \n    }\n}\n\nclass LocationRange extends React.Component {\n\n    constructor(props) {\n        super(props);\n         this.handleLatChange = this.handleLatChange.bind(this);\n        this.handleLatEpsilonChange = this.handleLatEpsilonChange.bind(this);\n        this.handleLonChange = this.handleLonChange.bind(this);\n        this.handleLonEpsilonChange = this.handleLonEpsilonChange.bind(this);\n    }\n\n\n    handleLatChange(event) {\n        this.props.onLatChange(event.target.value);\n    }\n\n    handleLatEpsilonChange(event) {\n        this.props.onLatEpsilonChange(event.target.value);\n    }\n\n    handleLonChange(event) {\n        this.props.onLonChange(event.target.value);\n    }\n\n    handleLonEpsilonChange(event) {\n        this.props.onLonEpsilonChange(event.target.value);\n    }\n\n    \n    render () {\n        return (\n            <div>\n              <div className=\"slide-container\">\n                <p className=\"label\">Latitude</p>\n                <input className=\"slider\"\n                       type=\"range\"\n                       name=\"lat\"\n                       id=\"lat\"\n                       min=\"-90\"\n                       max=\"90\"\n                       value={this.props.lat}\n                       onChange={this.handleLatChange} />\n                <label>Epsilon</label>\n                <input className=\"minislider\"\n                       type=\"range\"\n                       name=\"latEpsilon\"\n                       id=\"latEpsilon\"\n                       min=\"0\"\n                       max=\"10\"\n                       value={this.props.latEpsilon}\n                       onChange={this.handleLatEpsilonChange} />\n              </div>\n              <div>\n                <p className=\"label\">Longitude</p>\n                <input className=\"slider\"\n                  type=\"range\"\n                       name=\"lon\"\n                       id=\"lon\"\n                       min=\"-180\"\n                       max=\"180\"\n                       value={this.props.lon}\n                       onChange={this.handleLonChange} />\n                <label>Epsilon</label>\n                <input className=\"minislider\"\n                       type=\"range\"\n                       name=\"lonEpsilon\"\n                       id=\"lonEpsilon\"\n                       min=\"0\"\n                       max=\"10\"\n                       value={this.props.lonEpsilon}\n                       onChange={this.handleLonEpsilonChange} />\n              </div>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(\n\t<App />,\n\tdocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}